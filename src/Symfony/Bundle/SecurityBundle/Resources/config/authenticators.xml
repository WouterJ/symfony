<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="security.authenticator_handler"
                 class="Symfony\Component\Security\Http\Authentication\AuthenticatorHandler"
        >
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="event_dispatcher" on-invalid="null" />
            <argument /> <!-- stateless firewall keys -->
            <call method="setSessionAuthenticationStrategy">
                <argument type="service" id="security.authentication.session_strategy" />
            </call>
        </service>

        <service id="security.firewall.authenticator.locator"
                 class="Symfony\Component\DependencyInjection\ServiceLocator"
                 abstract="true" />

        <service id="security.firewall.authenticator"
                 class="Symfony\Bundle\SecurityBundle\EventListener\LazyAuthenticatorManagerListener"
                 abstract="true">
            <tag name="monolog.logger" channel="security" />
            <argument type="service" id="security.authentication.manager" />
            <argument type="service" id="security.authenticator_handler" />
            <argument/> <!-- authenticator locator -->
            <argument/> <!-- provider key -->
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <!-- Listeners -->

        <service id="Symfony\Component\Security\Http\EventListener\AuthenticatingListener">
            <tag name="kernel.event_subscriber" />
            <argument type="service" id="security.encoder_factory" />
        </service>

        <service id="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
            <tag name="kernel.event_subscriber" />
            <argument type="service" id="security.encoder_factory" />
        </service>

        <service id="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
            <tag name="kernel.event_subscriber" />
            <argument type="service" id="Symfony\Component\Security\Core\User\UserCheckerInterface" />
        </service>

        <service id="security.listener.remember_me"
                 class="Symfony\Component\Security\Http\EventListener\RememberMeListener"
                 abstract="true">
            <tag name="monolog.logger" channel="security" />
            <argument/> <!-- provider key -->
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <!-- Authenticators -->

        <service id="security.authenticator.basic"
                 class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator"
                 abstract="true">
            <argument/> <!-- realm name -->
            <argument/> <!-- user provider -->
            <argument type="service" id="security.encoder_factory" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="security.authenticator.form_login"
                 class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator"
                 abstract="true">
            <argument type="service" id="security.http_utils" />
            <argument /> <!-- csrf token generator -->
            <argument /> <!-- user provider -->
            <argument /> <!-- options -->
        </service>

        <service id="security.authenticator.anonymous"
                 class="Symfony\Component\Security\Http\Authenticator\AnonymousAuthenticator"
                 abstract="true">
            <argument /> <!-- secret -->
            <argument type="service" id="security.token_storage" />
        </service>
    </services>
</container>
